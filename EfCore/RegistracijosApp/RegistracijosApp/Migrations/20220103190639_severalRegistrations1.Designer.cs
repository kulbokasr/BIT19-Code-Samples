// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RegistracijosApp.Data;

namespace RegistracijosApp.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220103190639_severalRegistrations1")]
    partial class severalRegistrations1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RegistracijosApp.Models.Pozymis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReiksmeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Pozymiai");
                });

            modelBuilder.Entity("RegistracijosApp.Models.RegQandA", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PozymisId")
                        .HasColumnType("int");

                    b.Property<int>("RegId")
                        .HasColumnType("int");

                    b.Property<int>("ReiksmeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PozymisId");

                    b.HasIndex("ReiksmeId");

                    b.ToTable("Registracijos");
                });

            modelBuilder.Entity("RegistracijosApp.Models.Reiksme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PozymisId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PozymisId");

                    b.ToTable("Reiksmes");
                });

            modelBuilder.Entity("RegistracijosApp.Models.RegQandA", b =>
                {
                    b.HasOne("RegistracijosApp.Models.Pozymis", "Pozymis")
                        .WithMany()
                        .HasForeignKey("PozymisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RegistracijosApp.Models.Reiksme", "Reiksme")
                        .WithMany()
                        .HasForeignKey("ReiksmeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pozymis");

                    b.Navigation("Reiksme");
                });

            modelBuilder.Entity("RegistracijosApp.Models.Reiksme", b =>
                {
                    b.HasOne("RegistracijosApp.Models.Pozymis", "Pozymis")
                        .WithMany("Reiksmes")
                        .HasForeignKey("PozymisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pozymis");
                });

            modelBuilder.Entity("RegistracijosApp.Models.Pozymis", b =>
                {
                    b.Navigation("Reiksmes");
                });
#pragma warning restore 612, 618
        }
    }
}
